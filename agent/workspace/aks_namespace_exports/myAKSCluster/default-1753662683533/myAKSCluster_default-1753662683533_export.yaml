apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-07-28T00:32:06Z"
    generation: 1
    name: nginx
    namespace: default-1753662683533
    resourceVersion: "25408139"
    uid: e15e0636-e354-4bb4-b771-c700ddbaf1e9
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nginx
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx
      spec:
        containers:
        - image: docker.io/nginx
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              cpu: "256"
              memory: 11400G
            requests:
              cpu: "1"
              memory: "2"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-07-29T03:07:00Z"
      lastUpdateTime: "2025-07-29T03:07:00Z"
      message: ReplicaSet "nginx-5866cd8f49" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-07-29T03:30:00Z"
      lastUpdateTime: "2025-07-29T03:30:00Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-07-28T00:32:06Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    name: nginx-service
    namespace: default-1753662683533
    resourceVersion: "24913695"
    uid: c8fe8014-df16-44a7-b9fb-7eff8e792754
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.0.226.190
    clusterIPs:
    - 10.0.226.190
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: port80
      nodePort: 32475
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: nginx
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 134.33.229.104
        ipMode: VIP
kind: List
metadata:
  resourceVersion: ""
